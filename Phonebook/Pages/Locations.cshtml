@page
@{
    ViewData["Title"] = "Locations";
}

<h2>Административные округа и районы</h2>
<div class="row no-gutters">
    <div class="col">
        @(Html.DevExtreme().DataGrid<Phonebook.Models.Location.District>()
            .ID("districts")
            .DataSource(ds => ds.Mvc()
                .Controller("TerritorialUnitsWebApi")
                .LoadAction("GetDistricts")
                .InsertAction("PostDistrict")
                .UpdateAction("PutDistrict")
                .DeleteAction("Delete")
                .Key("ID")
            )
            .OnToolbarPreparing("customizeAddBtn")
            .Selection(s => s.Mode(SelectionMode.Single))
            .HoverStateEnabled(true)
            .RemoteOperations(true)
            .ShowColumnHeaders(false)
            .ShowBorders(false)
            .ShowColumnLines(false)
            .ShowRowLines(false)
            .Columns(columns => {

                columns.AddFor(m => m.Name)
                .SortOrder(SortOrder.Asc)
                .ValidationRules(vr =>
                {
                    vr.AddAsync()
                        .Message("Название административного округа должно быть уникально.")
                        .ValidationCallback("asyncValidationName");
                });

                columns.Add().Type(GridCommandColumnType.Buttons)
                   .Visible(false);

            })
            .Editing(e => e
                .Mode(GridEditMode.Popup)
                .AllowAdding(true)
                .Texts(texts => texts.AddRow("Добавить округ"))
                .AllowUpdating(true)
                .AllowDeleting(true)
                .UseIcons(true)
                 .Popup(p => p
                    .Title("Округ")
                    .ID("DistrictPopup")
                    .ShowTitle(true)
                    .MaxWidth(500)
                    .MaxHeight(250)
                    .ToolbarItems(ti =>
                    {
                        ti.Add()
                            .Widget(w => w.Button()
                                .Text("Сохранить")
                                .OnClick("saveDistrict")
                                .Type(ButtonType.Success)
                                .StylingMode(ButtonStylingMode.Outlined))
                            .Location(ToolbarItemLocation.After)
                            .Toolbar(Toolbar.Bottom);

                    })
                )
                .Form(f => f.Items(items =>
                {
                    items.AddGroup()
                        .ColCount(1)
                        .ColSpan(2)
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.Name);
                        });
                })
                .ID("DistrictForm"))
            )
            .OnContentReady("selection")
            .OnSelectionChanged("selection")
            .OnContextMenuPreparing("parseContextMenu")
        )
    </div>
    <div class="col">
        @(Html.DevExtreme().DataGrid<Phonebook.Models.Location.Microdistrict>()
            .ID("microdistricts")
            .DataSource(ds => ds.Mvc()
                .Controller("TerritorialUnitsWebApi")
                .LoadAction("GetMicrodistricts")
                .InsertAction("PostMicrodistrict")
                .UpdateAction("PutMicrodistrict")
                .DeleteAction("Delete")
                .Key("ID")
            )
            .OnToolbarPreparing("customizeAddBtn")
            .ShowColumnHeaders(false)
            .ShowBorders(false)
            .HoverStateEnabled(true)
            .ShowColumnLines(false)
            .ShowRowLines(false)
            .RemoteOperations(true)
            .Columns(columns => {

                columns.AddFor(m => m.Name)
                    .SortOrder(SortOrder.Asc)
                    .ValidationRules(vr =>
                    {
                        vr.AddAsync()
                            .Message("Название района должно быть уникально.")
                            .ValidationCallback("asyncValidationName");
                    });
                columns.AddFor(m => m.DistrictId)
                    .Lookup(lookup => lookup
                                .DataSource(d => d.Mvc().Controller("TerritorialUnitsWebApi").LoadAction("GetDistricts").Key("ID"))
                                .ValueExpr("ID")
                                .DisplayExpr("Name")
                            )
                    .ValidationRules(vr =>
                    {
                        vr.AddRequired()
                           .Message("Необходимо указать соответсвующий административный округ.");
                    })
                    .Visible(false);

                columns.Add().Type(GridCommandColumnType.Buttons)
                    .Visible(false);

            })
            .Editing(e => e
                .Mode(GridEditMode.Popup)
                .AllowAdding(true)
                .Texts(texts => texts.AddRow("Добавить район"))
                .AllowUpdating(true)
                .AllowDeleting(true)
                .Popup(p => p
                    .Title("Район")
                    .ID("MicrodistrictPopup")
                    .ShowTitle(true)
                    .MaxWidth(500)
                    .MaxHeight(285)
                    .ToolbarItems(ti =>
                    {

                        ti.Add()
                            .Widget(w => w.Button()
                                .Text("Сохранить")
                                .OnClick("saveMicrodistrict")
                                .Type(ButtonType.Success)
                                .StylingMode(ButtonStylingMode.Outlined))
                            .Location(ToolbarItemLocation.After)
                            .Toolbar(Toolbar.Bottom);

                    })
                )
                .Form(f => f.Items(items =>
                {
                    items.AddGroup()
                        .ColCount(1)
                        .ColSpan(2)
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.DistrictId);
                            groupItems.AddSimpleFor(m => m.Name);
                        });
                })
                .ID("MicrodistrictForm"))

            )
            .OnContextMenuPreparing("parseContextMenu")
        )
    </div>
</div>

@section Styles{
    <style>
        #LocationsNavItem a {
            border-bottom: 2px solid #728e94;
        }

        #districts .dx-datagrid-table {
            background-color: white;
        }

        #districts .dx-data-row td {
            font-size: 15px
        }

        #microdistricts .dx-data-row td {
            padding-bottom: 8px;
        }

        #microdistricts .dx-datagrid-table {
            background-color: #3cbab2;
            color: white;
        }
    </style>
}

@section Scripts{
    <script src="~/js/pages/locations.js" asp-append-version="true"></script>
}
