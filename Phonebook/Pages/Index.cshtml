@page
@{
    ViewData["Title"] = "PhoneNumbers";
}

<h2>Телефонный справочник</h2>

@(Html.DevExtreme().DataGrid<Phonebook.Models.PhoneNumber.PhoneNumber>()
    .DataSource(ds => ds.Mvc()
        .Controller("PhoneNumbersWebApi")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("Id")
    )
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
    .HeaderFilter(headerFilter => headerFilter.Visible(true))
    .RemoteOperations(true)
    .Columns(columns => {

        columns.AddFor(m => m.DistrictId)
            .SetCellValue("setDistrictValue")
            .Lookup(lookup => lookup
                    .DataSource(d => d.Mvc().Controller("TerritorialUnitsWebApi").LoadAction("GetDistricts").Key("ID"))
                    .ValueExpr("ID")
                    .DisplayExpr("Name")
                );

        columns.AddFor(m => m.MicrodistrictId)
            .Lookup(lookup => lookup
                    .DataSource("getMicrodistricts")
                    .ValueExpr("ID")
                    .DisplayExpr("Name")
                );

        columns.AddFor(m => m.Address);

        columns.AddFor(m => m.FullName);

        columns.AddFor(m => m.Number)
            .CellTemplate(new JS("customizePhoneNumber"));

        ////triggers by clickEditBtn in cellTemplate of Number column 
        columns.Add()
            .Type(GridCommandColumnType.Buttons)
            .CssClass("Grid__Column--ComandButtons")
            .Buttons(btns =>
            {
                btns.Add()
                .Name(GridColumnButtonName.Edit)
                .CssClass("JQ_EditButton");

            });

        columns.AddFor(m => m.Note);
    })
    .Editing(e => e
        .Mode(GridEditMode.Popup)
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
        .Popup(p => p
            .Title("Телефонная карточка")
            .ShowTitle(true)
            .Width(700)
            .Height(525)
        )
        .Form(f => f.Items(items =>
        {
            items.AddGroup()
                .ColCount(1)
                .ColSpan(2)
                .Items(groupItems =>
                {
                    groupItems.AddSimpleFor(m => m.DistrictId);
                    groupItems.AddSimpleFor(m => m.MicrodistrictId);
                    groupItems.AddSimpleFor(m => m.Address);
                    groupItems.AddSimpleFor(m => m.FullName);
                    groupItems.AddSimpleFor(m => m.Number)
                            .Editor(e => e
                                .TextBox()
                                .Mask("+7 (X00) 000-00-00")
                                .MaskRules(new { X = new JS("/[02-9]/") })
                            );

                    groupItems.AddSimpleFor(m => m.Note)
                        .Editor(editor => editor.TextArea().Height(100));
                });
        }))
    )
    .OnEditorPreparing("onEditorPreparing")
)
<style>
    .Grid__Column--ComandButtons {
        display: none;
    }
</style>
<script>

    function customizePhoneNumber($cell, cellInfo) {
        rowIndex = cellInfo.rowIndex;
        number = cellInfo.text;
        formatedNumber = number ? "+7(" + number.slice(0, 3) + ")" + number.slice(3, 6) + "-" + number.slice(6, 8) + "-" + number.slice(8, 10) : "";
        $cell.append("<a href='#' onclick='clickEditBtn([" + rowIndex + "])'>" + formatedNumber +"</a>");
    }

    //trigger click Edit button by link on Phone Number
    function clickEditBtn(rowIndex) {
        //diffrence in 1 between rowIndex form cellTemplate and aria-rowindex in attribute
        rowIndex++
        row = "[aria-rowindex=" + rowIndex + "] .JQ_EditButton";
        $(row).trigger("click")
    }

    function onEditorPreparing(e) {
        if(e.parentType === "dataRow" && e.dataField === "MicrodistrictId") {
            e.editorOptions.disabled = (typeof e.row.data.DistrictId !== "number");
        }
    }
    function getMicrodistricts(options) {
        console.log(options.data);
        return {
            store: DevExpress.data.AspNet.createStore({
                key: "ID",
                loadUrl: '@Url.Action("GetMicrodistricts", "TerritorialUnitsWebApi", new { httproute = true })'
            }),
            filter: options.data ? ["DistrictId", "=", options.data.DistrictId] : null
        };
    }
    function setDistrictValue(rowData, value) {
        rowData.DistrictId = value;
        rowData.MicrodistrictId = null;
    }
</script>